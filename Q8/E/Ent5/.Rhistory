X$label2 <- X[[label2]]
p.val = var.test(label1 ~ label2, data = X, alternative = "two.side")$p.value
if(p.val >= alpha) {
b = T
} else {
b = F
}
b = T
result <- t.test(label1 ~ label2, data = X, var.equal = b, alternative = "two.side", correct = F)
return (c(result$statistic, result$p.value))
}
#5,6
VerbBAov <- VarT.Test(Data, "AprenVerb_B", "Grupo")
VerbBAov
VarT.Test <- function(X, label1, label2, alpha = 0.05) {
X$label1 <- X[[label1]]
X$label2 <- X[[label2]]
p.val = var.test(label1 ~ label2, data = X, alternative = "two.side")$p.value
if(p.val >= alpha) {
b = T
} else {
b = F
}
return (t.test(label1 ~ label2, data = X, var.equal = b, alternative = "two.side", correct = F))
}
#1,2
EdadAns <- VarT.Test(Data, "Edad", "Grupo")
VarT.Test <- function(X, label1, label2, alpha = 0.05) {
X$label1 <- X[[label1]]
X$label2 <- X[[label2]]
p.val = var.test(label1 ~ label2, data = X, alternative = "two.side")$p.value
if(p.val >= alpha) {
b = T
} else {
b = F
}
return (t.test(label1 ~ label2, data = X, var.equal = b, alternative = "two.side", correct = F))
}
#1,2
EdadAns <- VarT.Test(Data, "Edad", "Grupo")
EdadAns$statistic
EdadAns$p.value
#9,10
difC <- Data$AprenVis_P[Data$Grupo == 'GC'] - Data$AprenVis_B[Data$Grupo == 'GC']
difC
#9,10
difC <- Data.GC$AprenVis_P - Data.GC[Data$Grupo == 'GC']
difE <- Data.GE$AprenVis_P - Data.GC[Data$Grupo == 'GC']
#9,10
difC <- Data.GC$AprenVis_P - Data.GC$AprenVis_B
difE <- Data.GE$AprenVis_P - Data.GC$AprenVis_B
t.test(difC)
t.test(difE)
t.test(difC)$conf.int
t.test(difE)$conf.int
t.test(Data.GC$AprenVerb_P, Data.GC$AprenVerb_B, paired=TRUE)
,
t.test(Data.GC$AprenVerb_B, Data.GC$AprenVerb_P, paired=TRUE)
t.test(difC)$conf.int
t.test(difE)$conf.int
#9,10
difC <- Data.GC$AprenVerb_P - Data.GC$AprenVerb_B
difE <- Data.GE$AprenVerb_P - Data.GC$AprenVerb_B
t.test(Data.GC$AprenVerb_B, Data.GC$AprenVerb_P, paired=TRUE)
t.test(difC)$conf.int
t.test(difE)$conf.int
?t.test
t.test(difC)$conf.int[1]
t.test(difC)$conf.int[:]
t.test(difC)$conf.int[,]
t.test(difC)$conf.int[:,]
t.test(difC)$conf.int[2]
t.test(difC)$conf.int[:2]
t.test(difC)$conf.int[,2]
t.test(difC)$conf.int[:1]
t.test(difC)$conf.int[1]
t.test(difC)$conf.int[(c,1)]
t.test(difC)$conf.int[c(1,2)]
t.test(difE)$conf.int[c(1,2)]
t.test(Data.GC$AprenVerb_P, Data.GC$AprenVerb_B, paired=TRUE)
t.test(Data.GE$AprenVerb_P, Data.GE$AprenVerb_B, paired=TRUE)
t.test(Data.GC$AprenVerb_P, Data.GC$AprenVerb_B, paired=TRUE)$conf.int[c(1,2)]
t.test(Data.GE$AprenVerb_P, Data.GE$AprenVerb_B, paired=TRUE)$conf.int[c(1,2)]
t.test(difC)$conf.int[c(1,2)]
t.test(difE)$conf.int[c(1,2)]
difE <- Data.GE$AprenVerb_P - Data.GE$AprenVerb_B
t.test(Data.GC$AprenVerb_P, Data.GC$AprenVerb_B, paired=TRUE)$conf.int[c(1,2)]
t.test(Data.GE$AprenVerb_P, Data.GE$AprenVerb_B, paired=TRUE)$conf.int[c(1,2)]
t.test(difC)$conf.int[c(1,2)]
t.test(difE)$conf.int[c(1,2)]
t.test(Data.GE$AprenVerb_P, Data.GE$AprenVerb_B, paired=TRUE)
##Potser cal girar l'ordre dels primers dos parametres
cmpC <- t.test(Data.GC$AprenVerb_P, Data.GC$AprenVerb_B, paired=TRUE)
cmpE <- t.test(Data.GE$AprenVerb_P, Data.GE$AprenVerb_B, paired=TRUE)
cmpC$conf.int[c(1,2)]
cmpE$conf.int[c(1,2)]
cmpC$statistic
cmpC$p.value
cmpE$statistic
cmpE$p.value
#17
cmpT = Data$AprenVerb_P - Data$AprenVerb_B
var.test(cmpT ~ grupo) #same var
var.test(cmpT ~ Grupo) #same var
var.test(cmpT ~ Grupo, data = Data) #same var
#17,18
cmpT <- Data$AprenVerb_P - Data$AprenVerb_B
p.val <- var.test(cmpT ~ Grupo, data = Data)$p.value #same var
if(p.val >= alpha) {
b = T
} else {
b = F
}
b
res <- t.test(cmpT ~ Grupo,data = Data, var.equal = b)
res$statistic
res$p.value
alpha <- 0.05
options(digit = 20)
#Data <- read_csv2("Github/UPC/Q8/E/Ent4/Zhu , Dean.csv")
Data <- read_csv2("Github/UPC/Q8/E/Ent4/Martos Berruezo, Alejandro.csv")
Data.GC <- Data[which(Data$Grupo == 'GC'),]
Data.GE <- Data[which(Data$Grupo == 'GE'),]
VarT.Test <- function(X, label1, label2, alpha = 0.05) {
X$label1 <- X[[label1]]
X$label2 <- X[[label2]]
p.val = var.test(label1 ~ label2, data = X, alternative = "two.side")$p.value
if(p.val >= alpha) {
b = T
} else {
b = F
}
return (t.test(label1 ~ label2, data = X, var.equal = b, alternative = "two.side", correct = F))
}
#Data <- read_csv2("Github/UPC/Q8/E/Ent4/Zhu , Dean.csv")
Data <- read_csv2("Github/UPC/Q8/E/Ent4/Martos Berruezo, Alejandro.csv")
Data.GC <- Data[which(Data$Grupo == 'GC'),]
Data.GE <- Data[which(Data$Grupo == 'GE'),]
VarT.Test <- function(X, label1, label2, alpha = 0.05) {
X$label1 <- X[[label1]]
X$label2 <- X[[label2]]
p.val = var.test(label1 ~ label2, data = X, alternative = "two.side")$p.value
if(p.val >= alpha) {
b = T
} else {
b = F
}
return (t.test(label1 ~ label2, data = X, var.equal = b, alternative = "two.side", correct = F))
}
#1,2
EdadAns <- VarT.Test(Data, "AnEvol", "Grupo")
EdadAns$statistic #en valor absolut els estadistics???
EdadAns$p.value
#3,4
CivT <- table(Data$Grupo, Data$EstCiv)
CivAns <- chisq.test(CivT, correct = F)
CivAns$statistic
CivAns$p.value
#5,6
VerbBAov <- VarT.Test(Data, "MemorTrab_B", "Grupo")
VerbBAov$statistic
VerbBAov$p.value
#7,8
VerbPAov <- VarT.Test(Data, "AprenVerb_P", "Grupo")
VerbPAov$statistic
VerbPAov$p.value
#9,10,11,12
difC <- Data.GC$AprenVerb_P - Data.GC$AprenVerb_B
difE <- Data.GE$AprenVerb_P - Data.GE$AprenVerb_B
##Potser cal girar l'ordre dels primers dos parametres
cmpC <- t.test(Data.GC$AprenVerb_P, Data.GC$AprenVerb_B, paired=TRUE)
cmpE <- t.test(Data.GE$AprenVerb_P, Data.GE$AprenVerb_B, paired=TRUE)
cmpC$conf.int[c(1,2)]
cmpE$conf.int[c(1,2)]
cmpC$statistic
cmpC$p.value
cmpE$statistic
cmpE$p.value
#17,18
cmpT <- Data$AprenVerb_P - Data$AprenVerb_B
p.val <- var.test(cmpT ~ Grupo, data = Data)$p.value #same var
if(p.val >= alpha) {
b = T
} else {
b = F
}
b
res <- t.test(cmpT ~ Grupo,data = Data, var.equal = b)
res$statistic
res$p.value
EdadAns$p.value[1]
EdadAns$p.value
EdadAns$p.value[2]
EdadAns$p.value[[1]]
EdadAns$p.value
print(EdadAns$p.value)
EdadAns$statistic #en valor absolut els estadistics???
EdadAns$statistic$t #en valor absolut els estadistics???
EdadAns$statistic[1] #en valor absolut els estadistics???
EdadAns$statistic$t #en valor absolut els estadistics???
EdadAns$statistic['t'] #en valor absolut els estadistics???
EdadAns$statistic[t] #en valor absolut els estadistics???
EdadAns$statistic[[t]] #en valor absolut els estadistics???
EdadAns$statistic #en valor absolut els estadistics???
print(EdadAns$statistic) #en valor absolut els estadistics???
E <- EdadAns$statistic
names(EdadAns$statistic)
print(EdadAns$statistic["t"]) #en valor absolut els estadistics???
print(as.vector(EdadAns$statistic)) #en valor absolut els estadistics???
print(EdadAns$p.value)
print(as.vector(CivAns$statistic))
CivAns$p.value
print(as.vector(VerbBAov$statistic))
print(as.vector(VerbBAov$p.value))
#7,8
VerbPAov <- VarT.Test(Data, "AprenVerb_P", "Grupo")
print(as.vector(VerbPAov$statistic))
print(as.vector(VerbPAov$p.value))
cmpC$conf.int[c(1,2)]
cmpE$conf.int[c(1,2)]
cmpC$statistic
cmpC$p.value
alpha <- 0.05
options(digit = 20)
Data <- read_csv2("/home/dean/Github/UPC/Q8/E/Ent4/Zhu , Dean.csv")
Data.GC <- Data[which(Data$Grupo == 'GC'),]
Data.GE <- Data[which(Data$Grupo == 'GE'),]
VarT.Test <- function(X, label1, label2, alpha = 0.05) {
X$label1 <- X[[label1]]
X$label2 <- X[[label2]]
p.val = var.test(label1 ~ label2, data = X, alternative = "two.side")$p.value
if(p.val >= alpha) {
b = T
} else {
b = F
}
return (t.test(label1 ~ label2, data = X, var.equal = b, alternative = "two.side", correct = F))
}
#1,2
EdadAns <- VarT.Test(Data, "Edad", "Grupo")
print(as.vector(EdadAns$statistic)) #en valor absolut els estadistics???
print(EdadAns$p.value)
#3,4
CivT <- table(Data$Grupo, Data$EstCiv)
CivAns <- chisq.test(CivT, correct = F)
print(as.vector(CivAns$statistic))
CivAns$p.value
#5,6
VerbBAov <- VarT.Test(Data, "AprenVerb_B", "Grupo")
print(as.vector(VerbBAov$statistic))
print(as.vector(VerbBAov$p.value))
#7,8
VerbPAov <- VarT.Test(Data, "AprenVerb_P", "Grupo")
print(as.vector(VerbPAov$statistic))
print(as.vector(VerbPAov$p.value))
#9,10,11,12
difC <- Data.GC$AprenVerb_P - Data.GC$AprenVerb_B
difE <- Data.GE$AprenVerb_P - Data.GE$AprenVerb_B
##Potser cal girar l'ordre dels primers dos parametres
cmpC <- t.test(Data.GC$AprenVerb_P, Data.GC$AprenVerb_B, paired=TRUE)
cmpE <- t.test(Data.GE$AprenVerb_P, Data.GE$AprenVerb_B, paired=TRUE)
cmpC$conf.int[c(1,2)]
cmpE$conf.int[c(1,2)]
print(as.vector(cmpC$statistic))
cmpC$p.value
print(as.vector(cmpE$statistic))
cmpE$p.value
#17,18
cmpT <- Data$AprenVerb_P - Data$AprenVerb_B
p.val <- var.test(cmpT ~ Grupo, data = Data)$p.value #same var
if(p.val >= alpha) {
b = T
} else {
b = F
}
Ans <- t.test(cmpT ~ Grupo,data = Data, var.equal = b)
print(as.vector(Ans$statistic))
Ans$p.value
source('~/Github/UPC/Q8/E/Ent4/Main.R')
source('~/Github/UPC/Q8/E/Ent4/Main.R')
Data <- read_csv2("/home/dean/Github/UPC/Q8/E/Ent4/Tapia Perez, Clara.csv")
source('~/Github/UPC/Q8/E/Ent4/Clara.R', echo=TRUE)
source('~/Github/UPC/Q8/E/Ent4/Clara.R')
Data <- read_csv2("/home/dean/Github/UPC/Q8/E/Ent4/Martos Berruezo, Alejandro.csv")
source('~/Github/UPC/Q8/E/Ent4/Alex.R')
alpha <- 0.05
options(digit = 20)
Data <- read_csv2("/home/dean/Github/UPC/Q8/E/Ent4/Martos Berruezo, Alejandro.csv")
Data.GC <- Data[which(Data$Grupo == 'GC'),]
Data.GE <- Data[which(Data$Grupo == 'GE'),]
VarT.Test <- function(X, label1, label2, alpha = 0.05) {
X$label1 <- X[[label1]]
X$label2 <- X[[label2]]
p.val = var.test(label1 ~ label2, data = X, alternative = "two.side")$p.value
if(p.val >= alpha) {
b = T
} else {
b = F
}
return (t.test(label1 ~ label2, data = X, var.equal = b, alternative = "two.side", correct = F))
}
#1,2
EdadAns <- VarT.Test(Data, "AnEvol", "Grupo")
print(as.vector(EdadAns$statistic)) #en valor absolut els estadistics???
print(EdadAns$p.value)
#3,4
CivT <- table(Data$Grupo, Data$EstCiv)
CivAns <- chisq.test(CivT, correct = F)
print(as.vector(CivAns$statistic))
print(CivAns$p.value)
#5,6
VerbBAov <- VarT.Test(Data, "MemorTrab_B", "Grupo")
print(as.vector(VerbBAov$statistic))
print(as.vector(VerbBAov$p.value))
#7,8
VerbPAov <- VarT.Test(Data, "MemorTrab_P", "Grupo")
print(as.vector(VerbPAov$statistic))
print(as.vector(VerbPAov$p.value))
source('~/Github/UPC/Q8/E/Ent4/Main.R')
source('~/Github/UPC/Q8/E/Ent4/Main.R')
cmpT
#17,18
Data$Dif <- Data$AprenVerb_P - Data$AprenVerb_B
p.val <- var.test(Dif ~ Grupo, data = Data)$p.value #same var
if(p.val >= alpha) {
b = T
} else {
b = F
}
b
p.val
Ans <- t.test(Dif ~ Grupo,data = Data, var.equal = b)
print(abs(as.vector(Ans$statistic)))
print(Ans$p.value)
source('~/Github/UPC/Q8/E/Ent4/Main.R')
t.test(lol)$conf.int
##Potser cal girar l'ordre dels primers dos parametres
lol <- Data.GC$AprenVerb_P - Data.GC$AprenVerb_B
t.test(lol)$conf.int
print(cmpC$conf.int[c(1,2)])
source('~/Github/UPC/Q8/E/Ent4/Alex.R')
source('~/Github/UPC/Q8/E/Ent4/Alex.R')
source('~/Github/UPC/Q8/E/Ent4/Alex.R')
source('~/Github/UPC/Q8/E/Ent4/entregable4.R')
dades = read_csv2("/home/dean/Github/UPC/Q8/E/Ent4/Zhu , Dean.csv")
edat = dades$Edad
grup = dades$Grupo
diagnostic = dades$Diag
apB = dades$AprenVis_B
apP = dades$AprenVis_P
#A
var.test(edat~grup) #gives same variance
tedat = t.test(edat~grup, var.equal = TRUE)
#1
tedat$statistic
#2
tedat$p.value #pvalue > 0.05, this means H0
#3
tdiag = prop.test(table(diagnostic, grup), correct = F)
tdiag$statistic
#4
tdiag$p.value
#B
var.test(apB~grup) #gives same variance
tapB = t.test(apB~grup, var.equal = TRUE)
#5
tapB$statistic
#6
tapB$p.value
#7
var.test(apP~grup) #gives same variance
tapP = t.test(apP~grup, var.equal = TRUE)
tapP$statistic
#8
tapP$p.value
#C
apPC = dades$AprenVis_P[dades$Grupo == 'GC']
apBC = dades$AprenVis_B[dades$Grupo == 'GC']
apPE = dades$AprenVis_P[dades$Grupo != 'GC']
apBE = dades$AprenVis_B[dades$Grupo != 'GC']
difapC = apPC - apBC
difapE = apPE - apBE
#9, 10
t.test(difapC)$conf.int
#11, 12
t.test(difapE)$conf.int
#13
dadesC = dades[dades$Grupo == 'GC',]
dadesE = dades[dades$Grupo != 'GC',]
tpC = t.test(dadesC$AprenVis_B, dadesC$AprenVis_P, paired = TRUE)
tpC$statistic
#14
tpC$p.value
#15
tpE = t.test(dadesE$AprenVis_B, dadesE$AprenVis_P, paired = TRUE)
tpE$statistic
#16
tpE$p.value
#17
difapT = dades$AprenVis_P - dades$AprenVis_B
var.test(difapT~grup) #same var
res = t.test(difapT~grup, var.equal = TRUE) #da que no (makes sense)
res$statistic
#18
res$p.value
dades = read_csv2("/home/dean/Github/UPC/Q8/E/Ent4/Zhu , Dean.csv")
edat = dades$Edad
grup = dades$Grupo
diagnostic = dades$Diag
apB = dades$AprenVis_B
apP = dades$AprenVis_P
#A
var.test(edat~grup) #gives same variance
tedat = t.test(edat~grup, var.equal = TRUE)
#1
tedat$statistic
#2
tedat$p.value #pvalue > 0.05, this means H0
#3
tdiag = prop.test(table(diagnostic, grup), correct = F)
tdiag$statistic
#4
tdiag$p.value
#B
var.test(apB~grup) #gives same variance
tapB = t.test(apB~grup, var.equal = TRUE)
#5
tapB$statistic
#6
tapB$p.value
#7
var.test(apP~grup) #gives same variance
tapP = t.test(apP~grup, var.equal = TRUE)
tapP$statistic
#8
tapP$p.value
#C
apPC = dades$AprenVis_P[dades$Grupo == 'GC']
apBC = dades$AprenVis_B[dades$Grupo == 'GC']
apPE = dades$AprenVis_P[dades$Grupo != 'GC']
apBE = dades$AprenVis_B[dades$Grupo != 'GC']
difapC = apPC - apBC
difapE = apPE - apBE
#9, 10
t.test(difapC)$conf.int
#11, 12
t.test(difapE)$conf.int
#13
dadesC = dades[dades$Grupo == 'GC',]
dadesE = dades[dades$Grupo != 'GC',]
tpC = t.test(dadesC$AprenVis_B, dadesC$AprenVis_P, paired = TRUE)
tpC$statistic
#14
tpC$p.value
#15
tpE = t.test(dadesE$AprenVis_B, dadesE$AprenVis_P, paired = TRUE)
tpE$statistic
#16
tpE$p.value
#17
difapT = dades$AprenVis_P - dades$AprenVis_B
var.test(difapT~grup) #same var
res = t.test(difapT~grup, var.equal = TRUE) #da que no (makes sense)
res$statistic
#18
res$p.value
#9,10,11,12
##Potser cal girar l'ordre dels primers dos parametres (aixo fa P - B)
?t.test
#9,10,11,12
##Potser cal girar l'ordre dels primers dos parametres (aixo fa P - B)
cmpC <- t.test(Data.GC$MemorTrab_P, Data.GC$MemorTrab_B, paired=TRUE, var.equal = T)
cmpE <- t.test(Data.GE$MemorTrab_P, Data.GE$MemorTrab_B, paired=TRUE, var.equal = T)
print(cmpC$conf.int[c(1,2)])
print(cmpE$conf.int[c(1,2)])
print(abs(as.vector(cmpC$statistic)))
print(cmpC$p.value)
print(abs(as.vector(cmpE$statistic)))
print(cmpE$p.value)
source('~/Github/UPC/Q8/E/Ent4/Main.R')
#9,10,11,12
##Potser cal girar l'ordre dels primers dos parametres (aixo fa P - B)
cmpC <- t.test(Data.GC$AprenVerb_P, Data.GC$AprenVerb_B, paired=TRUE, var.equal = T)
cmpE <- t.test(Data.GE$AprenVerb_P, Data.GE$AprenVerb_B, paired=TRUE, var.equal = T)
print(cmpC$conf.int[c(1,2)])
print(cmpE$conf.int[c(1,2)])
print(abs(as.vector(cmpC$statistic)))
print(cmpC$p.value)
print(abs(as.vector(cmpE$statistic)))
print(cmpE$p.value)
#17,18
Data$Dif <- Data$AprenVerb_P - Data$AprenVerb_B
p.val <- var.test(Dif ~ Grupo, data = Data)$p.value
if(p.val >= alpha) {
b = T
} else {
b = F
}
source('~/Github/UPC/Q8/E/Ent4/Main.R')
install.packages(c("car", "emmeans"))
#QÜESTIONARI 5 ESTADÍSTICA
options(digits = 9)
library(car)
setwd("~/Github/UPC/Q8/E/Ent5")
#Llegim les dades i tot seguit les visualitzem
dades = read.csv2("Dades.csv")
View(dades)
#QÜESTIONARI 5 ESTADÍSTICA
options(digits = 9)
library(car)
install.packages('car')
install.packages("car")
